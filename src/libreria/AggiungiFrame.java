
package libreria;
import java.io.File;

/** 
 * 
 * 
 * Questa classe crea un frame per l'inserimento dei dati del file multimediale
 * da inserire nella libreria.
 * 
 * @author Giuseppe
 * @author Calogero
 * @author Marco
 * 
 */

public class AggiungiFrame extends javax.swing.JFrame {
    /**
     * VARIABILI:
     * -Controllo -> variabile intera per effettuare vari controlli
     * -Tipo_Elemento -> identifica il tipo di elemento da adattare all'interfaccia
     * -f -> file
     * -lib -> libreria nella quale inserire l'elemento
     * -modello_tabella -> modello per la visualizzazione degli elementi in forma tabellare 
     *                     in MyNewFrame
     */
    private int controllo;
    private int tipo_elemento;
    private Elemento elemento = null;
    private File f;
    private MyLibreria lib;
    private MyTableModel modelloTabella;
    
    /**
     * Creates new form .
     * @param tipo -> identifica il tipo di elemento in modo da adattare l'interfaccia.
     * @param lib -> libreria nella quale inserire l'elemento.
     * @param modello -> modello per la visualizzazione in forma tabellare
     */
    public AggiungiFrame(int tipo, MyLibreria lib, MyTableModel modello) {
        setLocationRelativeTo(null);
        this.modelloTabella = modello;
        this.tipo_elemento = tipo;
        this.lib = lib;
        initComponents();
        
        jLabelFrequenza.setVisible(false); 
        jTextFieldFrequenza.setVisible(false);
        
        switch (tipo){
            case 1: jLabelA.setText("Durata"); jLabelFrequenza.setVisible(true); jTextFieldFrequenza.setVisible(true);  break;
            case 2: jLabelA.setText("Durata"); break;
            case 3: jLabelA.setText("NÂ°Pagine"); break;
        }
        
        jLabelErrFrequenza.setVisible(false);
        JLabelErrAnno.setVisible(false);
        JLabelErrA.setVisible(false);
        this.JButtonOk.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        JLabelTitolo = new javax.swing.JLabel();
        JLabelAutore = new javax.swing.JLabel();
        JLabelFile = new javax.swing.JLabel();
        JTextAutore = new javax.swing.JTextField();
        JTextTitolo = new javax.swing.JTextField();
        JTextPercorso = new javax.swing.JTextField();
        JButtonSfoglia = new javax.swing.JButton();
        JTextAnno = new javax.swing.JTextField();
        jLabelAnno = new javax.swing.JLabel();
        JButtonOk = new javax.swing.JButton();
        jLabelA = new javax.swing.JLabel();
        JTextA = new javax.swing.JTextField();
        JLabelErrAnno = new javax.swing.JLabel();
        JLabelErrA = new javax.swing.JLabel();
        jLabelFrequenza = new javax.swing.JLabel();
        jTextFieldFrequenza = new javax.swing.JTextField();
        jLabelErrFrequenza = new javax.swing.JLabel();

        jFormattedTextField1.setText("jFormattedTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Inserimento Elemento");

        JLabelTitolo.setText("Titolo");

        JLabelAutore.setText("Autore");

        JLabelFile.setText("File ");

        JTextAutore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTextAutoreActionPerformed(evt);
            }
        });

        JTextPercorso.setEditable(false);

        JButtonSfoglia.setText("Sfoglia");
        JButtonSfoglia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButtonSfogliaActionPerformed(evt);
            }
        });

        JTextAnno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                JTextAnnoKeyReleased(evt);
            }
        });

        jLabelAnno.setText("Anno");

        JButtonOk.setText("OK");
        JButtonOk.setEnabled(false);
        JButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButtonOkActionPerformed(evt);
            }
        });

        jLabelA.setText("Durata");

        JTextA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTextAActionPerformed(evt);
            }
        });
        JTextA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                JTextAKeyReleased(evt);
            }
        });

        JLabelErrAnno.setForeground(new java.awt.Color(255, 51, 51));
        JLabelErrAnno.setText("*Numero intero");

        JLabelErrA.setForeground(new java.awt.Color(255, 51, 51));
        JLabelErrA.setText("*Numero ");

        jLabelFrequenza.setText("Frequenza ");

        jTextFieldFrequenza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFrequenzaActionPerformed(evt);
            }
        });
        jTextFieldFrequenza.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldFrequenzaKeyReleased(evt);
            }
        });

        jLabelErrFrequenza.setForeground(new java.awt.Color(255, 0, 0));
        jLabelErrFrequenza.setText("*Numero");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JLabelTitolo)
                    .addComponent(jLabelAnno)
                    .addComponent(JLabelFile)
                    .addComponent(JLabelAutore)
                    .addComponent(jLabelFrequenza)
                    .addComponent(jLabelA))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldFrequenza)
                            .addComponent(JTextAnno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(JTextAutore, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(JTextPercorso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(JTextTitolo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(JLabelErrAnno)
                                    .addComponent(JButtonSfoglia))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelErrFrequenza)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                                .addComponent(JButtonOk)
                                .addGap(13, 13, 13))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(JTextA, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(JLabelErrA)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLabelTitolo)
                    .addComponent(JTextTitolo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JTextAutore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JLabelAutore))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLabelFile)
                    .addComponent(JButtonSfoglia)
                    .addComponent(JTextPercorso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JTextAnno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAnno)
                    .addComponent(JLabelErrAnno))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelA)
                    .addComponent(JTextA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JLabelErrA))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldFrequenza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelFrequenza)
                            .addComponent(jLabelErrFrequenza))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(JButtonOk)
                        .addGap(19, 19, 19))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** 
     * Azioni bottone Sfoglia.
     * Implementa l'apertura del file chooser e setta il percorso
     * @param evt identifica l'evento che ha generato la chiamata.
     */
    private void JButtonSfogliaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButtonSfogliaActionPerformed
        MyFileChooser fc = new MyFileChooser(tipo_elemento);
        f = fc.getFile();
        if (f!=null){
            JTextPercorso.setText(""+f.getName());
        }
    }//GEN-LAST:event_JButtonSfogliaActionPerformed

/** 
 * Azioni bottone ok.
 * Inserisce l'elemento creato dall'utente nella libreria.
 * @param evt identifica l'evento
 */
    private void JButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButtonOkActionPerformed
        // TODO add your handling code here:
        
            switch (tipo_elemento){
                case 1: lib.creaBrano(JTextTitolo.getText(), JTextAutore.getText(), JTextAnno.getText(), JTextA.getText(), jTextFieldFrequenza.getText(),f.getAbsolutePath()); break;
                case 2: lib.creaVideo(JTextTitolo.getText(), JTextAutore.getText(), JTextAnno.getText(), JTextA.getText(), f.getAbsolutePath()); break;
                case 3: lib.creaEBook(JTextTitolo.getText(), JTextAutore.getText(), JTextAnno.getText(), JTextA.getText(), f.getAbsolutePath()); break;
            }
            
            //AGGIORNAMENTO
            modelloTabella.aggiorna();
        
        this.dispose();
       
    }//GEN-LAST:event_JButtonOkActionPerformed

 /**
 * Keyboard event generato quando un tasto(key) viene rilasciato in JTextAnno. 
 * Metodo che permette di controllare i campi inseriti, e in caso di giusto inserimento abilita il bottone "OK":
 *  - controlla i campi comuni ai tre tipi di file (video, brani, ebook)
 *  - tramite lo switch controlla i campi specifici del tipo di file
 *  Nello specifico:
 *  . Nei casi in cui il campo inserito sia o l'anno, o la durata, o il numero di pagine, o la
 *    frequenza di campionamento controlla che si inseriscano solo numeri mediante il metodo controlloText().
 *  . Successivamente controlla che i campi comuni a tutti i tipi di file siano pieni, e in quel
 *    entra dello switch case per controllare che anche i campi specifici siano stati inderiti
 *  . Se tutti i campi sono inseriti correttamente allora abilita il bottone "OK", alrimenti rimane
 *    enable(false).
 * @param evt 
 */
    private void JTextAnnoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTextAnnoKeyReleased
        if(evt != null && evt.getComponent()==JTextAnno)
            controlloText(3);
        if(evt != null && evt.getComponent()==JTextA)
            controlloText(5);
        if(evt != null && evt.getComponent()==jTextFieldFrequenza)
            controlloText(7);
        
        controllo = ControlloTipo();
        if(!this.JTextTitolo.getText().isEmpty()&&!this.JTextAutore.getText().isEmpty()&&!this.JTextAnno.getText().isEmpty()
                &&!this.JTextPercorso.getText().isEmpty()){
            
            switch(controllo){
                case 0: if(!this.JTextA.getText().isEmpty() && isNumero(JTextA.getText())!= 0 && isNumero(JTextAnno.getText())== 2 && !this.jTextFieldFrequenza.getText().isEmpty()
                           && isNumero(jTextFieldFrequenza.getText())!=0)
                            this.JButtonOk.setEnabled(true);
                        else
                            this.JButtonOk.setEnabled(false);
                        break;
                        
                case 1: if(!this.JTextA.getText().isEmpty()
                           && isNumero(JTextA.getText())!=0  && isNumero(JTextAnno.getText())==2 && this.jTextFieldFrequenza.getText().isEmpty()
                           )
                            this.JButtonOk.setEnabled(true);
                        else
                            this.JButtonOk.setEnabled(false);
                        break;
            }
        
        } else{
            this.JButtonOk.setEnabled(false);
        }
        
                
        
    }//GEN-LAST:event_JTextAnnoKeyReleased

/**
 * Keyboard event generato quando un tasto(key) viene rilasciato in JTextA. 
 * Metodo che permette di controllare i campi inseriti, e in caso di giusto inserimento abilita il bottone "OK":
 *  - controlla i campi comuni ai tre tipi di file (video, brani, ebook)
 *  - tramite lo switch controlla i campi specifici del tipo di file
 *  Nello specifico:
 *  . Nei casi in cui il campo inserito sia o l'anno, o la durata, o il numero di pagine, o la
 *    frequenza di campionamento controlla che si inseriscano solo numeri mediante il metodo controlloText().
 *  . Successivamente controlla che i campi comuni a tutti i tipi di file siano pieni, e in quel
 *    entra dello switch case per controllare che anche i campi specifici siano stati inderiti
 *  . Se tutti i campi sono inseriti correttamente allora abilita il bottone "OK", alrimenti rimane
 *    enable(false).
 * @param evt 
 */
    private void JTextAKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTextAKeyReleased
        if(evt != null && evt.getComponent()==JTextAnno)
            controlloText(3);
        if(evt != null && evt.getComponent()==JTextA)
            controlloText(5);
        if(evt != null && evt.getComponent()==jTextFieldFrequenza)
            controlloText(7);
        
        controllo = ControlloTipo();
        if(!this.JTextTitolo.getText().isEmpty()&&!this.JTextAutore.getText().isEmpty()&&!this.JTextAnno.getText().isEmpty()
                &&!this.JTextPercorso.getText().isEmpty()){
            
            switch(controllo){
                case 0: if(!this.JTextA.getText().isEmpty() && isNumero(JTextA.getText())!= 0 && isNumero(JTextAnno.getText())== 2 && !this.jTextFieldFrequenza.getText().isEmpty()
                           && isNumero(jTextFieldFrequenza.getText())!=0)
                            this.JButtonOk.setEnabled(true);
                        else
                            this.JButtonOk.setEnabled(false);
                        break;
                        
                case 1: if(!this.JTextA.getText().isEmpty()
                           && isNumero(JTextA.getText())!=0  && isNumero(JTextAnno.getText())==2 && this.jTextFieldFrequenza.getText().isEmpty()
                           )
                            this.JButtonOk.setEnabled(true);
                        else
                            this.JButtonOk.setEnabled(false);
                        break;
            }
        
        } else{
            this.JButtonOk.setEnabled(false);
        }
    }//GEN-LAST:event_JTextAKeyReleased

    private void JTextAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTextAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTextAActionPerformed

    private void JTextAutoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTextAutoreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTextAutoreActionPerformed

    private void jTextFieldFrequenzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFrequenzaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldFrequenzaActionPerformed

/**
 * Keyboard event generato quando un tasto(key) viene rilasciato in JTextFrequenza. 
 * Metodo che permette di controllare i campi inseriti, e in caso di giusto inserimento abilita il bottone "OK":
 *  - controlla i campi comuni ai tre tipi di file (video, brani, ebook)
 *  - tramite lo switch controlla i campi specifici del tipo di file
 *  Nello specifico:
 *  . Nei casi in cui il campo inserito sia o l'anno, o la durata, o il numero di pagine, o la
 *    frequenza di campionamento controlla che si inseriscano solo numeri mediante il metodo controlloText().
 *  . Successivamente controlla che i campi comuni a tutti i tipi di file siano pieni, e in quel
 *    entra dello switch case per controllare che anche i campi specifici siano stati inderiti
 *  . Se tutti i campi sono inseriti correttamente allora abilita il bottone "OK", alrimenti rimane
 *    enable(false).
 * @param evt 
 */
    private void jTextFieldFrequenzaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldFrequenzaKeyReleased
        
        if(evt != null && evt.getComponent()==JTextAnno)
            controlloText(3);
        if(evt != null && evt.getComponent()==JTextA)
            controlloText(5);
        if(evt != null && evt.getComponent()==jTextFieldFrequenza)
            controlloText(7);
        
        controllo = ControlloTipo();
        
        if(!this.JTextTitolo.getText().isEmpty()&&!this.JTextAutore.getText().isEmpty()&&!this.JTextAnno.getText().isEmpty()
                &&!this.JTextPercorso.getText().isEmpty()){
            
            switch(controllo){
                case 0: if(!this.JTextA.getText().isEmpty() && isNumero(JTextA.getText())!= 0 && isNumero(JTextAnno.getText())== 2 && !this.jTextFieldFrequenza.getText().isEmpty()
                           && isNumero(jTextFieldFrequenza.getText())!=0)
                            this.JButtonOk.setEnabled(true);
                        else
                            this.JButtonOk.setEnabled(false);
                        break;
                        
                case 1: if(!this.JTextA.getText().isEmpty()
                           && isNumero(JTextA.getText())!=0  && isNumero(JTextAnno.getText())==2 && this.jTextFieldFrequenza.getText().isEmpty()
                           )
                            this.JButtonOk.setEnabled(true);
                        else
                            this.JButtonOk.setEnabled(false);
                        break;
            }
        
        } else{
            this.JButtonOk.setEnabled(false);
        }
    }//GEN-LAST:event_jTextFieldFrequenzaKeyReleased

/**
 * Metodo che controlla l'inserimento dei soli campi numerici (Durata,NumPagine e Frequenza).
 * Nel caso di sbagliato inserimento rende visibili le "label guida", che indicano
 * all' utente dove e perchÃ¨ ha sbagliato 
 * @param n 
 */    
    private void controlloText(int n){
        switch(n){
            case 3: if(!JTextAnno.getText().isEmpty() && isNumero(JTextAnno.getText())!=2)
                        this.JLabelErrAnno.setVisible(true);
                    else
                        this.JLabelErrAnno.setVisible(false);
                    break;
            case 5: if(!JTextA.getText().isEmpty() && isNumero(JTextA.getText())== 0)
                        this.JLabelErrA.setVisible(true);
                    else
                        this.JLabelErrA.setVisible(false);
                    break;
            case 7: if(!jTextFieldFrequenza.getText().isEmpty() && isNumero(jTextFieldFrequenza.getText()) == 0)
                        this.jLabelErrFrequenza.setVisible(true);
                    else
                        this.jLabelErrFrequenza.setVisible(false);
                    break;
                    default:break;
        }
    }
    
/**
 * Metodo che ritorna un numero intero indicante il tipo di dato del campo analizzato.
     * In particolare cerca di convertire il testo del campo analizzato in intero o
     * in float. Se non ci riesce, tramite try/catch ritorna il numero corrispondente.
     * Prova quindi a convertire il testo in intero, se ci riesce allora ritorna 2,
     * se non ci riesce allora ci sono due casi possibili: o Ã¨ float o non Ã¨ un numero.
     * Prova a convertire il testo in float, se ci riesce allora ritorna 1, altrimenti
     * ritorna 0.
 * @param str
 * @return numero intero
 */    
    private int isNumero(String str){
        float num1;
        float num2;
        try{
            num2=Integer.valueOf(str);
        }
        catch(NumberFormatException e){
            try{
                num1=Float.valueOf(str);
            }
            catch(NumberFormatException ex){
                return 0;
            }
            return 1;
        }
        return 2;
    }
    
    
 /**
     * Metodo che controlla il tipo dell'elemento:
     * Se Ã¨ un MP3 --> Controllo = 0
     * Se Ã¨ un MP4/PDF --> Controllo = 1
     * @return Controllo
     */     
    private int ControlloTipo(){
        int Controllo = 0;
        switch(tipo_elemento){
            case 1: Controllo = 0; break;
            case 2,3: Controllo = 1;break;
        }
        return Controllo;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JButtonOk;
    private javax.swing.JButton JButtonSfoglia;
    private javax.swing.JLabel JLabelAutore;
    private javax.swing.JLabel JLabelErrA;
    private javax.swing.JLabel JLabelErrAnno;
    private javax.swing.JLabel JLabelFile;
    private javax.swing.JLabel JLabelTitolo;
    private javax.swing.JTextField JTextA;
    private javax.swing.JTextField JTextAnno;
    private javax.swing.JTextField JTextAutore;
    private javax.swing.JTextField JTextPercorso;
    private javax.swing.JTextField JTextTitolo;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabelA;
    private javax.swing.JLabel jLabelAnno;
    private javax.swing.JLabel jLabelErrFrequenza;
    private javax.swing.JLabel jLabelFrequenza;
    private javax.swing.JTextField jTextFieldFrequenza;
    // End of variables declaration//GEN-END:variables
}
