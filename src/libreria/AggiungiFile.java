

package libreria;
/**
 * 
 * Classe che permette l'aggiunta di più file multimediali (seleziondo una cartella) contemporaneamente.
 * 
 * In base al tipo di file, viene creato un JDialog che permette l'inserimento delle informazioni relative ai file multimediali
 * contenuti all'interno della folder selezionata.
 * (In base al tipo dei file multimediali le informazioni da inserire sono differenti).
 * 
 * @author Giuseppe
 * @author Calogero
 * @author Marco
 */


public class AggiungiFile extends javax.swing.JDialog {

 /**
 * VARIABILI
 * -modello_tabella -> variabile utilizzata per la visualizzazione in forma tabellare dei file multimediali salvati
 *                     nella libreria
 * -lib -> libreria dove inserire i file multimediali
 * -posizione -> posizione elemento
 * -controllo -> variabile utilizzata nei metodi per effettuare controlli
 * -elemento -> file multimediale (brano,video o ebook)
 */
    private MyTableModel modello_tabella;
    private MyLibreria lib;
    private int posizione;
    private int controllo;
    private Elemento elemento;
    
    /**
     * Creates new form DialogModifica
     * @param lib -> libreria multimediale
     * @param pos -> posizione
     * @param modello -> modello per la visualizzazione in forma tabellare dei file multimediali salvati
                         nella libreria
     * @param parent ->
     * @param modal ->
     */
    public AggiungiFile(MyLibreria lib, int pos, MyTableModel modello, java.awt.Frame parent, boolean modal) {
        
        super(parent, modal);
        setLocationRelativeTo(null);
        this.modello_tabella = modello;
        this.lib= lib;
        this.posizione = pos;
        this.elemento= lib.get(posizione);
        
        initComponents();
        jLabelFrequenza.setVisible(false); 
        jTextFrequenza.setVisible(false);
        
         switch(elemento.getTipo()){
            
             case "MP3":
                jLabelFrequenza.setVisible(true); 
                jTextFrequenza.setVisible(true);
                jLabelA.setText("Durata"); 
                break;
                
            case "MP4": jLabelA.setText("Durata"); break;
            
            case "PDF": jLabelA.setText("N°Pagine"); break;
        }

        JTextPercorso.setText(elemento.getPercorso());
        jLabelErrAnno.setVisible(false);
        jLabelErrA.setVisible(false);
        jLabelErrFrequenza.setVisible(false);
        this.jButtonAggiungi.setEnabled(false);
        this.setVisible(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitolo = new javax.swing.JLabel();
        JTextTitolo = new javax.swing.JTextField();
        jLabelAutore = new javax.swing.JLabel();
        JTextAutore = new javax.swing.JTextField();
        jLabelFile = new javax.swing.JLabel();
        JTextPercorso = new javax.swing.JTextField();
        jLabelAnno = new javax.swing.JLabel();
        JTextAnno = new javax.swing.JTextField();
        jLabelA = new javax.swing.JLabel();
        JTextA = new javax.swing.JTextField();
        jButtonAggiungi = new javax.swing.JButton();
        jLabelErrAnno = new javax.swing.JLabel();
        jLabelErrA = new javax.swing.JLabel();
        jLabelFrequenza = new javax.swing.JLabel();
        jTextFrequenza = new javax.swing.JTextField();
        jLabelErrFrequenza = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabelTitolo.setText("Titolo");

        JTextTitolo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTextTitoloActionPerformed(evt);
            }
        });

        jLabelAutore.setText("Autore");

        jLabelFile.setText("File ");

        JTextPercorso.setEditable(false);

        jLabelAnno.setText("Anno");

        JTextAnno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                JTextAnnoKeyReleased(evt);
            }
        });

        jLabelA.setText("Durata");

        JTextA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                JTextAKeyReleased(evt);
            }
        });

        jButtonAggiungi.setText("Aggiungi");
        jButtonAggiungi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAggiungiActionPerformed(evt);
            }
        });

        jLabelErrAnno.setForeground(new java.awt.Color(204, 0, 0));
        jLabelErrAnno.setText("*Numero intero");

        jLabelErrA.setForeground(new java.awt.Color(204, 0, 51));
        jLabelErrA.setText("*Numero");

        jLabelFrequenza.setText("Frequenza");

        jTextFrequenza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFrequenzaActionPerformed(evt);
            }
        });
        jTextFrequenza.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFrequenzaKeyReleased(evt);
            }
        });

        jLabelErrFrequenza.setForeground(new java.awt.Color(204, 0, 51));
        jLabelErrFrequenza.setText("*Numero");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelFrequenza)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFrequenza, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelErrFrequenza)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonAggiungi)
                        .addGap(19, 19, 19))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelAutore)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelFile)
                                    .addComponent(jLabelTitolo)
                                    .addComponent(jLabelAnno)
                                    .addComponent(jLabelA))
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(JTextA, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(JTextAnno, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(JTextPercorso, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(JTextAutore, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(JTextTitolo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelErrAnno)
                                    .addComponent(jLabelErrA))))
                        .addContainerGap(90, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTitolo)
                    .addComponent(JTextTitolo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAutore)
                    .addComponent(JTextAutore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFile)
                    .addComponent(JTextPercorso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JTextAnno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAnno)
                    .addComponent(jLabelErrAnno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelA)
                    .addComponent(JTextA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelErrA))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAggiungi))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelFrequenza)
                            .addComponent(jTextFrequenza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelErrFrequenza))))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
/**
 * Gestisce l'aggiornamento dei campi della libreria.
 * @param evt 
 */
    private void jButtonAggiungiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAggiungiActionPerformed
        // TODO add your handling code here:
       
            elemento.setAnno(JTextAnno.getText());
            elemento.setAutore(JTextAutore.getText());
            elemento.setTitolo(JTextTitolo.getText());
            
            switch(elemento.getTipo()) {
                case "MP3": BranoMusicale BN = (BranoMusicale)elemento;
                            BN.setDurata(JTextA.getText());
                            BN.setFrequenza(jTextFrequenza.getText());
                            break;
                case "MP4": Video V = (Video)elemento; 
                            V.setDurata(JTextA.getText());
                            break;
                case "PDF": EBook E = (EBook)elemento; 
                            E.setNPagine(JTextA.getText());
                            break;
                            
            }
           
        
        modello_tabella.aggiorna();
        this.dispose();

    }//GEN-LAST:event_jButtonAggiungiActionPerformed

/**
 * Keyboard event generato quando un tasto(key) viene rilasciato in JTextAnno. 
 * Metodo che permette di controllare i campi inseriti, e in caso di giusto inserimento abilita il bottone "OK":
 *  - controlla i campi comuni ai tre tipi di file (video, brani, ebook)
 *  - tramite lo switch controlla i campi specifici del tipo di file
 *  Nello specifico:
 *  . Nei casi in cui il campo inserito sia o l'anno, o la durata, o il numero di pagine, o la
 *    frequenza di campionamento controlla che si inseriscano solo numeri mediante il metodo controlloText().
 *  . Successivamente controlla che i campi comuni a tutti i tipi di file siano pieni, e in quel
 *    entra dello switch case per controllare che anche i campi specifici siano stati inderiti
 *  . Se tutti i campi sono inseriti correttamente allora abilita il bottone "OK", alrimenti rimane
 *    enable(false).
 * @param evt 
 */
    private void JTextAnnoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTextAnnoKeyReleased
        // TODO add your handling code here:
        
        if(evt != null && evt.getComponent()==JTextAnno)
            controlloText(3);
        if(evt != null && evt.getComponent()==JTextA)
            controlloText(5);
        if(evt != null && evt.getComponent()==jTextFrequenza)
            controlloText(7);
        
        controllo = ControlloTipo();
        if(!this.JTextTitolo.getText().isEmpty()&&!this.JTextAutore.getText().isEmpty()&&!this.JTextAnno.getText().isEmpty()
                &&!this.JTextPercorso.getText().isEmpty()){
            switch(controllo){
                case 0: if(!this.JTextA.getText().isEmpty() && isNumero(JTextA.getText())!= 0 && isNumero(JTextAnno.getText())== 2 && !this.jTextFrequenza.getText().isEmpty()
                           && isNumero(jTextFrequenza.getText())!=0)
                            this.jButtonAggiungi.setEnabled(true);
                        else
                            this.jButtonAggiungi.setEnabled(false);
                        break;
                        
                case 1: if(!this.JTextA.getText().isEmpty()
                           && isNumero(JTextA.getText())!=0  && isNumero(JTextAnno.getText())==2 && this.jTextFrequenza.getText().isEmpty()
                           )
                            this.jButtonAggiungi.setEnabled(true);
                        else
                            this.jButtonAggiungi.setEnabled(false);
                        break;
            }
        
        } else{
            this.jButtonAggiungi.setEnabled(false);
        }
    }//GEN-LAST:event_JTextAnnoKeyReleased

    private void JTextTitoloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTextTitoloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTextTitoloActionPerformed

/**
 * Keyboard event generato quando un tasto(key) viene rilasciato in JTextA (JTextfield che figura la durata (per video e brani)
 * o in NumPagine (per gli ebook).
 * Metodo che permette di controllare i campi inseriti, e in caso di giusto inserimento abilita il bottone "OK":
 *  - controlla i campi comuni ai tre tipi di file (video, brani, ebook)
 *  - tramite lo switch controlla i campi specifici del tipo di file
 *  Nello specifico:
 *  . Nei casi in cui il campo inserito sia o l'anno, o la durata, o il numero di pagine, o la
 *    frequenza di campionamento controlla che si inseriscano solo numeri mediante il metodo controlloText().
 *  . Successivamente controlla che i campi comuni a tutti i tipi di file siano pieni, e in quel
 *    entra dello switch case per controllare che anche i campi specifici siano stati inderiti
 *  . Se tutti i campi sono inseriti correttamente allora abilita il bottone "OK", alrimenti rimane
 *    enable(false).
 * @param evt 
 */
    private void JTextAKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTextAKeyReleased
        // TODO add your handling code here:
        if(evt != null && evt.getComponent()==JTextAnno)
            controlloText(3);
        if(evt != null && evt.getComponent()==JTextA)
            controlloText(5);
        if(evt != null && evt.getComponent()==jTextFrequenza)
            controlloText(7);
        
        controllo = ControlloTipo();
        if(!this.JTextTitolo.getText().isEmpty() && !this.JTextAutore.getText().isEmpty() && !this.JTextAnno.getText().isEmpty()
                &&!this.JTextPercorso.getText().isEmpty()){
            switch(controllo){
                case 0: if(!this.JTextA.getText().isEmpty() && isNumero(JTextA.getText())!= 0 && isNumero(JTextAnno.getText())== 2 && !this.jTextFrequenza.getText().isEmpty()
                           && isNumero(jTextFrequenza.getText())!=0)
                            this.jButtonAggiungi.setEnabled(true);
                        else
                            this.jButtonAggiungi.setEnabled(false);
                        break;
                        
                case 1: if(!this.JTextA.getText().isEmpty()
                           && isNumero(JTextA.getText())!=0  && isNumero(JTextAnno.getText())==2 && this.jTextFrequenza.getText().isEmpty()
                           )
                            this.jButtonAggiungi.setEnabled(true);
                        else
                            this.jButtonAggiungi.setEnabled(false);
                        break;
            }
        
        } else{
            this.jButtonAggiungi.setEnabled(false);
        }
    }//GEN-LAST:event_JTextAKeyReleased

    private void jTextFrequenzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFrequenzaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFrequenzaActionPerformed

/**
 * Keyboard event generato quando un tasto(key) viene rilasciato in JTextFrequenza. 
 * Metodo che permette di controllare i campi inseriti, e in caso di giusto inserimento abilita il bottone "OK":
 *  - controlla i campi comuni ai tre tipi di file (video, brani, ebook)
 *  - tramite lo switch controlla i campi specifici del tipo di file
 *  Nello specifico:
 *  . Nei casi in cui il campo inserito sia o l'anno, o la durata, o il numero di pagine, o la
 *    frequenza di campionamento controlla che si inseriscano solo numeri mediante il metodo controlloText().
 *  . Successivamente controlla che i campi comuni a tutti i tipi di file siano pieni, e in quel
 *    entra dello switch case per controllare che anche i campi specifici siano stati inderiti
 *  . Se tutti i campi sono inseriti correttamente allora abilita il bottone "OK", alrimenti rimane
 *    enable(false).
 * @param evt 
 */
    private void jTextFrequenzaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFrequenzaKeyReleased
        // TODO add your handling code here:
        if(evt != null && evt.getComponent()==JTextAnno)
            controlloText(3);
        if(evt != null && evt.getComponent()==JTextA)
            controlloText(5);
        if(evt != null && evt.getComponent()==jTextFrequenza)
            controlloText(7);
        
        controllo = ControlloTipo();
        if(!this.JTextTitolo.getText().isEmpty()&&!this.JTextAutore.getText().isEmpty()&&!this.JTextAnno.getText().isEmpty()
                &&!this.JTextPercorso.getText().isEmpty()){
            switch(controllo){
                case 0: if(!this.JTextA.getText().isEmpty() && isNumero(JTextA.getText())!= 0 && isNumero(JTextAnno.getText())== 2 && !this.jTextFrequenza.getText().isEmpty()
                           && isNumero(jTextFrequenza.getText())!=0)
                            this.jButtonAggiungi.setEnabled(true);
                        else
                            this.jButtonAggiungi.setEnabled(false);
                        break;
                        
                case 1: if(!this.JTextA.getText().isEmpty()
                           && isNumero(JTextA.getText())!=0  && isNumero(JTextAnno.getText())==2 && this.jTextFrequenza.getText().isEmpty()
                           )
                            this.jButtonAggiungi.setEnabled(true);
                        else
                            this.jButtonAggiungi.setEnabled(false);
                        break;
            }
        
        } else{
            this.jButtonAggiungi.setEnabled(false);
        }
    }//GEN-LAST:event_jTextFrequenzaKeyReleased

/**
 * Metodo che controlla l'inserimento dei soli campi numerici (Anno,Durata/NumPagine e Frequenza).
 * Nel caso di sbagliato inserimento rende visibili le "label guida", che indicano
 * all' utente dove e perchè ha sbagliato 
 * @param n 
 */
    private void controlloText(int n){
        switch(n){
            case 3: if(!JTextAnno.getText().isEmpty() && isNumero(JTextAnno.getText())!=2)
                        this.jLabelErrAnno.setVisible(true);
                    else
                        this.jLabelErrAnno.setVisible(false);
                    break;
            case 5: if(!JTextA.getText().isEmpty() && isNumero(JTextA.getText())==0)
                        this.jLabelErrA.setVisible(true);
                    else
                        this.jLabelErrA.setVisible(false);
                    break;
            case 7: if(!jTextFrequenza.getText().isEmpty() && isNumero(jTextFrequenza.getText()) == 0)
                        this.jLabelErrFrequenza.setVisible(true);
                    else
                        this.jLabelErrFrequenza.setVisible(false);
                    break;
                    default:break;
        }
    }
    
/**
 * Metodo che ritorna un numero intero indicante il tipo di dato del campo analizzato.
 * In particolare cerca di convertire il testo del campo analizzato in intero o
 * in float. Se non ci riesce, tramite try/catch ritorna il numero corrispondente.
 * Prova quindi a convertire il testo in intero, se ci riesce allora ritorna 2,
 * se non ci riesce allora ci sono due casi possibili: o è float o non è un numero.
 * Prova a convertire il testo in float, se ci riesce allora ritorna 1, altrimenti
 * ritorna 0.
 * @param str
 * @return numero intero
 */ 
    private int isNumero(String str){
        float num1;
        float num2;
        try{
            num2=Integer.valueOf(str);
        }
        catch(NumberFormatException e){
            try{
                num1=Float.valueOf(str);
            }
            catch(NumberFormatException ex){
                return 0;
            }
            return 1;
        }
        return 2;
    }
     
/**
* Metodo che controlla il tipo dell'elemento:
* Se è un MP3 --> Controllo = 0
* Se è un MP4/PDF --> Controllo = 1
* @return Controllo
*/ 
    private int ControlloTipo(){
        int Controllo = 0;
        switch(elemento.getTipo()){
            case "MP3": Controllo = 0; break;
            case "MP4","PDF": Controllo = 1;break;
        }
        return Controllo;
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JTextA;
    private javax.swing.JTextField JTextAnno;
    private javax.swing.JTextField JTextAutore;
    private javax.swing.JTextField JTextPercorso;
    private javax.swing.JTextField JTextTitolo;
    private javax.swing.JButton jButtonAggiungi;
    private javax.swing.JLabel jLabelA;
    private javax.swing.JLabel jLabelAnno;
    private javax.swing.JLabel jLabelAutore;
    private javax.swing.JLabel jLabelErrA;
    private javax.swing.JLabel jLabelErrAnno;
    private javax.swing.JLabel jLabelErrFrequenza;
    private javax.swing.JLabel jLabelFile;
    private javax.swing.JLabel jLabelFrequenza;
    private javax.swing.JLabel jLabelTitolo;
    private javax.swing.JTextField jTextFrequenza;
    // End of variables declaration//GEN-END:variables
}
